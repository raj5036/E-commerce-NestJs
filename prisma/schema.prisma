// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email          String           @unique
  password       String
  firstname      String
  lastname       String
  role           String
  Product        Product[]
  Order          Order[]
  Payment        Payment[]
  DiscountCoupon DiscountCoupon[]

  @@map("users")
}

model Product {
  id String @id       @default(auto()) @map("_id") @db.ObjectId

  user   User         @relation(fields: [userId], references: [id])
  userId String       @db.ObjectId

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  name        String  @unique
  description String?
  price       String
  image       String?

  @@map("products")
}

model Order {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  user          User   @relation(fields: [userId], references: [id])
  userId        String @db.ObjectId

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deletedAt     DateTime?

  products      ProductOrder[]
  price         String
  couponCode    String?
  isPaymentDone Boolean   @default(false)

  payment Payment?

  @@map("orders")
}

model Payment {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  order   Order  @relation(fields: [orderId], references: [id])
  orderId String @unique @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("payments")
}

model DiscountCoupon {
  id        String @id @default(auto()) @map("_id") @db.ObjectId

  user      User   @relation(fields: [userId], references: [id])
  userId    String @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name      String @unique
  code      String @unique
  discount  Int

  @@map("discountCoupons")
}

type ProductOrder {
  productId   String
  price       String
  quantity    Int
}

model Shipment {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId

  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  trackingNumber  String    @unique
  orderId         String
  isDelivered     Boolean   @default(false)
  isCanceled      Boolean   @default(false)

  @@map("shipments")
}
